{"version":3,"file":"static/js/186.bf107bf3.chunk.js","mappings":"sUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAMHC,EAAS,mCAAG,WAAMC,GAAN,uFACAH,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DE,IAF9D,cACjBC,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfG,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAMF,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACEN,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAiB,mCAAG,oGACRV,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBM,EAAe,SAAAC,GAAG,OAC7BA,EArCgB,kCAqCKA,EAnCrB,uFAkC6B,C,6ECX/B,UA1BgB,WACd,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAgBU,GACbG,MAAK,SAAAf,GAAQ,OAAIW,EAAeX,EAASgB,QAA5B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,gBAAiBF,EAAMG,QAAvC,GACf,GAAE,CAACT,IAEGF,EAAYY,OAAS,GAC1B,eAAIC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAA5D,SACGhB,EAAYiB,KAAI,YAA8B,IAA3BxB,EAA0B,EAA1BA,GAAIyB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,yBAAG,WAASD,MACZ,uBAAIC,MAFG1B,EAKZ,OAGH,uBAAG,qBAEN,C","sources":["API/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b687de23fc0b495d34f2b135cc7089d8';\n\nconst BASE_IMG_URL = `http://image.tmdb.org/t/p/w300/`;\nconst NOT_FOUND_IMG_URL =\n  'https://www.carnival.com.au/_ui/responsive/ccl/assets/images/notfound_placeholder.svg';\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getPosterUrl = url =>\n  url ? BASE_IMG_URL + url : NOT_FOUND_IMG_URL;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'API/api';\n\nconst Reviews = () => {\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(response => setReviewsInfo(response.results))\n      .catch(error => console.log('error.message', error.message));\n  }, [movieId]);\n\n  return reviewsInfo.length > 0 ? (\n    <ul style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n      {reviewsInfo.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <b>Author: {author}</b>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    <p>Reviews not found</p>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getMovies","query","response","data","getMovieReviews","id","getMovieCredits","getMovieDetails","getTrendingMovies","getPosterUrl","url","useState","reviewsInfo","setReviewsInfo","movieId","useParams","useEffect","then","results","catch","error","console","log","message","length","style","display","flexDirection","gap","map","author","content"],"sourceRoot":""}