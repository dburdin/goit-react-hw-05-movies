{"version":3,"file":"static/js/841.0c6b392b.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAS,mCAAG,WAAMC,GAAN,uFACAH,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DE,IAF9D,cACjBC,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfG,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAMF,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACEN,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAiB,mCAAG,oGACRV,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,oD,8IC/BjBM,EAAaC,EAAAA,GAAAA,KAAH,qNAYVC,EAAcD,EAAAA,GAAAA,MAAH,kKASXE,EAAeF,EAAAA,GAAAA,OAAH,8ZCpBZG,EAAOH,EAAAA,GAAAA,GAAH,wHAQJI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yT,SCRRM,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnC,OACE,SAACL,EAAD,UACGI,EAAOE,KAAI,SAAAC,GACV,OACE,yBACE,SAACN,EAAD,CAAUO,GAAE,kBAAaD,EAAMf,IAAMiB,MAAO,CAAEC,KAAML,GAApD,SACGE,EAAMI,SAFFJ,EAAMf,GAMlB,KAGN,EC2CD,EApDe,WACb,OAA4BoB,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMX,GAAWY,EAAAA,EAAAA,MACXC,EAAOH,EAAaI,IAAI,SAE9BC,EAAAA,EAAAA,YAAU,WACHF,IAGL/B,EAAAA,EAAAA,IAAU+B,GACPG,MAAK,SAAAhC,GACJ,GAA+B,IAA3BA,EAASiC,cAEX,OADAT,EAAU,IACHU,OAAOC,MAAM,8CAEtBX,EAAUxB,EAASoC,QACpB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,gBAAiBF,EAAMG,QAAvC,GACf,GAAE,CAACZ,IAeJ,OACE,iCACE,UAACtB,EAAD,CAAYmC,SAfK,SAAAC,GACnBA,EAAMC,iBAEN,IAAM7C,EAAQ4C,EAAME,OAAO3B,MAAM4B,MAAMC,cAEvC,GAAqB,KAAjBhD,EAAMiD,OACR,OAAOd,OAAOC,MAAM,6BAEtBR,EAAgB,CAAEE,KAAM9B,IAExB4C,EAAMM,cAAcC,OACrB,EAIG,WACE,SAACzC,EAAD,CACE0C,KAAK,OACLtB,KAAK,QACLuB,aAAa,MACbC,YAAY,mBAEd,SAAC3C,EAAD,CAAcyC,KAAK,SAAnB,SAA4B,cAG7BpC,EAAOuC,OAAS,IAAK,SAACxC,EAAD,CAAYC,OAAQA,EAAQC,SAAUA,MAGjE,C","sources":["API/api.js","pages/Movies/Movies.styled.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b687de23fc0b495d34f2b135cc7089d8';\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-top: 20px;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  overflow: hidden;\n  font-size: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  border: 1px solid lightsteelblue;\n  border-radius: 20px;\n  width: 500px;\n  font-size: inherit;\n  padding: 0 5px;\n  outline: none;\n`;\n\nexport const SearchButton = styled.button`\n  display: block;\n  width: 150px;\n  height: 40px;\n  text-transform: uppercase;\n  border: none;\n  border-radius: 20px;\n  background-color: lightsteelblue;\n  color: grey;\n\n  cursor: pointer;\n\n  transition-property: background-color, color;\n  transition-duration: 250ms;\n  transition-timing-function: linear;\n\n  :hover {\n    background-color: #ff7f50;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  font-size: 20px;\n  flex-direction: column;\n  gap: 10px;\n  padding: 5px;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: flex;\n  text-decoration: none;\n  color: grey;\n  font-size: 20px;\n\n  transform: scale(1);\n\n  transition-property: transform, color;\n  transition-duration: 250ms;\n  transition-timing-function: linear;\n\n  :hover {\n    color: #ff7f50;\n    transform: scale(0.97);\n  }\n`;\n","import { List } from './MoviesList.styled';\nimport { LinkItem } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <LinkItem to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </LinkItem>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { getMovies } from 'API/api';\nimport { SearchForm, SearchInput, SearchButton } from './Movies.styled';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const name = searchParams.get('name');\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n    getMovies(name)\n      .then(response => {\n        if (response.total_results === 0) {\n          setMovies([]);\n          return window.alert('Nothing Found! Please repeat your request!');\n        }\n        setMovies(response.results);\n      })\n      .catch(error => console.log('error.message', error.message));\n  }, [name]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const query = event.target.movie.value.toLowerCase();\n\n    if (query.trim() === '') {\n      return window.alert('You need enter something!');\n    }\n    setSearchParams({ name: query });\n\n    event.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"movie\"\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getMovies","query","response","data","getMovieReviews","id","getMovieCredits","getMovieDetails","getTrendingMovies","SearchForm","styled","SearchInput","SearchButton","List","LinkItem","Link","MoviesList","movies","location","map","movie","to","state","from","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","useLocation","name","get","useEffect","then","total_results","window","alert","results","catch","error","console","log","message","onSubmit","event","preventDefault","target","value","toLowerCase","trim","currentTarget","reset","type","autoComplete","placeholder","length"],"sourceRoot":""}