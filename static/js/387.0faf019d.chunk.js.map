{"version":3,"file":"static/js/387.0faf019d.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAS,mCAAG,WAAMC,GAAN,uFACAH,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DE,IAF9D,cACjBC,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfG,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAMF,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACEN,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAiB,mCAAG,oGACRV,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,oD,gIC/BjBM,EAAWC,EAAAA,GAAAA,GAAH,6IASRC,EAAWD,EAAAA,GAAAA,GAAH,gI,SC8BrB,EAnCa,WACX,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBS,GACbG,MAAK,SAAAhB,GACJY,EAAYZ,EAASiB,KACtB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,gBAAiBF,EAAMG,QAAvC,GACf,GAAE,CAACT,IAIJ,OACE,+BACE,SAACN,EAAD,UACGI,EAASY,KAAI,YAA4C,IAAzCpB,EAAwC,EAAxCA,GAAIqB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACvC,OACE,UAACjB,EAAD,YACE,gBACEkB,MAAM,QACNC,IAAG,UAVC,mCAUD,OAAoBH,GACvBI,IAAKL,KAEP,yBAAG,QAAMA,MACT,yBAAG,SAAOE,OAPGvB,EAUlB,OAIR,C","sources":["API/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b687de23fc0b495d34f2b135cc7089d8';\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  width: 100%;\n  margin-top: 10px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: calc((100% - 60px) / 4);\n`;\n","import { getMovieCredits } from 'API/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CastList, CastItem } from './Cast.styled';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(response => {\n        setCastInfo(response.cast);\n      })\n      .catch(error => console.log('error.message', error.message));\n  }, [movieId]);\n\n  const BASE_IMG_URL = `http://image.tmdb.org/t/p/w300/`;\n\n  return (\n    <>\n      <CastList>\n        {castInfo.map(({ id, name, profile_path, character }) => {\n          return (\n            <CastItem key={id}>\n              <img\n                width=\"150px\"\n                src={`${BASE_IMG_URL}${profile_path}`}\n                alt={name}\n              />\n              <b>Name:{name}</b>\n              <p>Role: {character}</p>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","getMovies","query","response","data","getMovieReviews","id","getMovieCredits","getMovieDetails","getTrendingMovies","CastList","styled","CastItem","useState","castInfo","setCastInfo","movieId","useParams","useEffect","then","cast","catch","error","console","log","message","map","name","profile_path","character","width","src","alt"],"sourceRoot":""}